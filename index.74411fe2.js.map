{"mappings":"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","sources":["src/index.js"],"sourcesContent":["class AudioController {\n  constructor() {\n    this.bgMusic = new Audio('Audio/creepy.mp3');\n    this.flipSound = new Audio('Audio/flip.wav');\n    this.matchSound = new Audio('Audio/match.wav');\n    this.victorySound = new Audio('Audio/victory.wav');\n    this.gameOverSound = new Audio('Audio/gameover.wav');\n    this.bgMusic.volume = 0.5;\n    this.bgMusic.loop = true;\n  }\n\n  startMusic() {\n    this.bgMusic.play();\n  }\n  stopMusic() {\n    this.bgMusic.pause();\n    this.bgMusic.currentTime = 0;\n  }\n  flip() {\n    this.flipSound.play();\n  }\n  match() {\n    this.matchSound.play();\n  }\n  victory() {\n    this.stopMusic();\n    this.victorySound.play();\n  }\n  gameOver() {\n    this.stopMusic();\n    this.gameOverSound.play();\n  }\n}\n\nclass MixOrMatch {\n  constructor(totalTime, cards) {\n    this.cardsArray = cards;\n    this.totalTime = totalTime;\n    this.timeRemaining = totalTime;\n    this.timer = document.getElementById('time-remaining');\n    this.ticker = document.getElementById('flips');\n    this.audioController = new AudioController();\n  }\n  startGame() {\n    this.cardToCheck = null;\n    this.totalClicks = 0;\n    this.timeRemaining = this.totalTime;\n    this.matchedCards = [];\n    this.busy = true;\n    setTimeout(() => {\n      this.audioController.startMusic();\n      this.shuffleCards();\n      this.countDown = this.startCountDown();\n      this.busy = false;\n    }, 500);\n    this.hideCards();\n    this.timer.innerText = this.timeRemaining;\n    this.ticker.innerText = this.totalClicks;\n  }\n  hideCards() {\n    this.cardsArray.forEach(card => {\n      card.classList.remove('visible');\n      card.classList.remove('matched');\n    });\n  }\n  flipCard(card) {\n    if (this.canFlipCard(card)) {\n      this.audioController.flip();\n      this.totalClicks++;\n      this.ticker.innerText = this.totalClicks;\n      card.classList.add('visible');\n\n      if (this.cardToCheck) this.checkForCardMatch(card);\n      else this.cardToCheck = card;\n    }\n  }\n  checkForCardMatch(card) {\n    if (this.getCardType(card) === this.getCardType(this.cardToCheck))\n      this.cardMatch(card, this.cardToCheck);\n    else this.cardMisMatch(card, this.cardToCheck);\n\n    this.cardToCheck = null;\n  }\n  cardMatch(card1, card2) {\n    this.matchedCards.push(card1);\n    this.matchedCards.push(card2);\n    card1.classList.add('matched');\n    card2.classList.add('matched');\n    this.audioController.match();\n    if (this.matchedCards.length === this.cardsArray.length) this.victory();\n  }\n  cardMisMatch(card1, card2) {\n    this.busy = true;\n    setTimeout(() => {\n      card1.classList.remove('visible');\n      card2.classList.remove('visible');\n      this.busy = false;\n    }, 1000);\n  }\n  getCardType(card) {\n    return card.getElementsByClassName('card-value')[0].src;\n  }\n  startCountDown() {\n    return setInterval(() => {\n      this.timeRemaining--;\n      this.timer.innerText = this.timeRemaining;\n      if (this.timeRemaining === 0) this.gameOver();\n    }, 1000);\n  }\n  gameOver() {\n    clearInterval(this.countDown);\n    this.audioController.gameOver();\n    document.getElementById('game-over-text').classList.add('visible');\n  }\n  victory() {\n    clearInterval(this.countDown);\n    this.audioController.victory();\n    document.getElementById('victory-text').classList.add('visible');\n  }\n\n  shuffleCards() {\n    for (let i = this.cardsArray.length - 1; i > 0; i--) {\n      let randIndex = Math.floor(Math.random() * (i + 1));\n      this.cardsArray[randIndex].style.order = i;\n      this.cardsArray[i].style.order = randIndex;\n    }\n  }\n\n  canFlipCard(card) {\n    return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;\n  }\n}\n\nfunction ready() {\n  let overlays = Array.from(document.getElementsByClassName('overlay-text'));\n  let cards = Array.from(document.getElementsByClassName('card'));\n  let game = new MixOrMatch(100, cards);\n\n  overlays.forEach(overlay => {\n    overlay.addEventListener('click', () => {\n      overlay.classList.remove('visible');\n      game.startGame();\n    });\n  });\n  cards.forEach(card => {\n    card.addEventListener('click', () => {\n      game.flipCard(card);\n    });\n  });\n}\n\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', ready());\n} else {\n  ready();\n}\n"],"names":["$1f0dc3b9307be026$var$AudioController","startMusic","this","bgMusic","play","stopMusic","pause","currentTime","flip","flipSound","match","matchSound","victory","victorySound","gameOver","gameOverSound","constructor","Audio","volume","loop","$1f0dc3b9307be026$var$MixOrMatch","startGame","cardToCheck","totalClicks","timeRemaining","totalTime","matchedCards","busy","setTimeout","audioController","shuffleCards","countDown","startCountDown","hideCards","timer","innerText","ticker","cardsArray","forEach","card","classList","remove","flipCard","canFlipCard","add","checkForCardMatch","getCardType","cardMatch","cardMisMatch","card1","card2","push","length","getElementsByClassName","src","setInterval","clearInterval","document","getElementById","i","randIndex","Math","floor","random","style","order","includes","cards","$1f0dc3b9307be026$var$ready","overlays","Array","from","game","overlay","addEventListener","readyState"],"version":3,"file":"index.74411fe2.js.map"}