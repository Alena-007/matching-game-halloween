class t{startMusic(){this.bgMusic.play()}stopMusic(){this.bgMusic.pause(),this.bgMusic.currentTime=0}flip(){this.flipSound.play()}match(){this.matchSound.play()}victory(){this.stopMusic(),this.victorySound.play()}gameOver(){this.stopMusic(),this.gameOverSound.play()}constructor(){this.bgMusic=new Audio("Audio/creepy.mp3"),this.flipSound=new Audio("Audio/flip.wav"),this.matchSound=new Audio("Audio/match.wav"),this.victorySound=new Audio("Audio/victory.wav"),this.gameOverSound=new Audio("Audio/gameover.wav"),this.bgMusic.volume=.5,this.bgMusic.loop=!0}}class i{startGame(){this.cardToCheck=null,this.totalClicks=0,this.timeRemaining=this.totalTime,this.matchedCards=[],this.busy=!0,setTimeout((()=>{this.audioController.startMusic(),this.shuffleCards(),this.countDown=this.startCountDown(),this.busy=!1}),500),this.hideCards(),this.timer.innerText=this.timeRemaining,this.ticker.innerText=this.totalClicks}hideCards(){this.cardsArray.forEach((t=>{t.classList.remove("visible"),t.classList.remove("matched")}))}flipCard(t){this.canFlipCard(t)&&(this.audioController.flip(),this.totalClicks++,this.ticker.innerText=this.totalClicks,t.classList.add("visible"),this.cardToCheck?this.checkForCardMatch(t):this.cardToCheck=t)}checkForCardMatch(t){this.getCardType(t)===this.getCardType(this.cardToCheck)?this.cardMatch(t,this.cardToCheck):this.cardMisMatch(t,this.cardToCheck),this.cardToCheck=null}cardMatch(t,i){this.matchedCards.push(t),this.matchedCards.push(i),t.classList.add("matched"),i.classList.add("matched"),this.audioController.match(),this.matchedCards.length===this.cardsArray.length&&this.victory()}cardMisMatch(t,i){this.busy=!0,setTimeout((()=>{t.classList.remove("visible"),i.classList.remove("visible"),this.busy=!1}),1e3)}getCardType(t){return t.getElementsByClassName("card-value")[0].src}startCountDown(){return setInterval((()=>{this.timeRemaining--,this.timer.innerText=this.timeRemaining,0===this.timeRemaining&&this.gameOver()}),1e3)}gameOver(){clearInterval(this.countDown),this.audioController.gameOver(),document.getElementById("game-over-text").classList.add("visible")}victory(){clearInterval(this.countDown),this.audioController.victory(),document.getElementById("victory-text").classList.add("visible")}shuffleCards(){for(let t=this.cardsArray.length-1;t>0;t--){let i=Math.floor(Math.random()*(t+1));this.cardsArray[i].style.order=t,this.cardsArray[t].style.order=i}}canFlipCard(t){return!this.busy&&!this.matchedCards.includes(t)&&t!==this.cardToCheck}constructor(i,s){this.cardsArray=s,this.totalTime=i,this.timeRemaining=i,this.timer=document.getElementById("time-remaining"),this.ticker=document.getElementById("flips"),this.audioController=new t}}function s(){let t=Array.from(document.getElementsByClassName("overlay-text")),s=Array.from(document.getElementsByClassName("card")),e=new i(100,s);t.forEach((t=>{t.addEventListener("click",(()=>{t.classList.remove("visible"),e.startGame()}))})),s.forEach((t=>{t.addEventListener("click",(()=>{e.flipCard(t)}))}))}"loading"===document.readyState?document.addEventListener("DOMContentLoaded",s()):s();
//# sourceMappingURL=index.74411fe2.js.map
